(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> expected string or buffer"
p3
sS'layer'
p4
S'/home/pi/web2py/applications/planer/controllers/display.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# try something like\ndef index(): return dict(message="hello from display.py")\n\ndef weather():\n  import urllib2\n  import json\n  url = "http://wttr.in/Krakow?format=j1"\n  opener = urllib2.build_opener()\n  opener.addheaders = [(\'Accept-Language\', \'pl\')]\n  content = opener.open(url).readlines()\n  c = json.loads(content)\n  display_weather()\n  return dict()\nresponse._vars=response._caller(weather)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/usr/lib/python2.7/dist-packages/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/pi/web2py/applications/planer/controllers/display.py", line 15, in <module>\n  File "/usr/lib/python2.7/dist-packages/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/pi/web2py/applications/planer/controllers/display.py", line 12, in weather\n    c = json.loads(content)\n  File "/usr/lib/python2.7/json/__init__.py", line 339, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python2.7/json/decoder.py", line 364, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\nTypeError: expected string or buffer\n'
p11
s.